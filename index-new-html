<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SEOtter 🦦 - SEO Analysis Tool</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 20px;
        }

        .logo-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, #06b6d4, #0891b2);
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 30px;
            box-shadow: 0 8px 20px rgba(6, 182, 212, 0.3);
        }

        .logo-text {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #06b6d4, #0891b2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .subtitle {
            font-size: 1.2rem;
            color: #64748b;
            margin-bottom: 40px;
        }

        .input-section {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            margin-bottom: 40px;
        }

        .url-container {
            position: relative;
            margin-bottom: 20px;
        }

        .url-input {
            width: 100%;
            padding: 20px 150px 20px 20px;
            border: 3px solid #e2e8f0;
            border-radius: 16px;
            font-size: 16px;
            font-family: 'Monaco', 'Menlo', monospace;
            transition: all 0.3s ease;
        }

        .url-input:focus {
            outline: none;
            border-color: #06b6d4;
            box-shadow: 0 0 0 4px rgba(6, 182, 212, 0.1);
        }

        .analyze-btn {
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            padding: 16px 24px;
            background: linear-gradient(135deg, #06b6d4, #0891b2);
            color: white;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .analyze-btn:hover {
            transform: translateY(-50%) scale(1.05);
        }

        .analyze-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: translateY(-50%);
        }

        .results {
            display: none;
        }

        .score-hero {
            background: linear-gradient(135deg, #06b6d4, #0891b2);
            color: white;
            border-radius: 20px;
            padding: 40px;
            text-align: center;
            margin-bottom: 30px;
        }

        .score-display {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 40px;
            flex-wrap: wrap;
        }

        .score-circle {
            width: 120px;
            height: 120px;
            border: 8px solid rgba(255, 255, 255, 0.3);
            border-top: 8px solid white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

        .score-text {
            font-size: 2.5rem;
            font-weight: bold;
        }

        .breakdown-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .breakdown-card {
            background: white;
            border: 2px solid #e2e8f0;
            border-radius: 16px;
            padding: 25px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .breakdown-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .breakdown-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
        }

        .breakdown-title {
            color: #64748b;
            margin-bottom: 10px;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.9rem;
        }

        .breakdown-score {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .breakdown-bar {
            width: 100%;
            height: 8px;
            background: #f1f5f9;
            border-radius: 4px;
            overflow: hidden;
        }

        .breakdown-fill {
            height: 100%;
            border-radius: 4px;
            transition: width 1s ease;
        }

        .recommendations {
            background: white;
            border-radius: 16px;
            padding: 30px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

        .recommendation-item {
            background: #f8fafc;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            border-left: 4px solid #06b6d4;
        }

        .recommendation-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
            flex-wrap: wrap;
            gap: 10px;
        }

        .recommendation-category {
            background: #06b6d4;
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .priority-critical { background: #fee2e2; color: #dc2626; padding: 4px 12px; border-radius: 20px; font-size: 0.8rem; font-weight: 600; }
        .priority-high { background: #fef3c7; color: #d97706; padding: 4px 12px; border-radius: 20px; font-size: 0.8rem; font-weight: 600; }
        .priority-medium { background: #dbeafe; color: #2563eb; padding: 4px 12px; border-radius: 20px; font-size: 0.8rem; font-weight: 600; }

        .recommendation-issue {
            font-weight: 600;
            margin-bottom: 8px;
            color: #1e293b;
        }

        .recommendation-solution {
            color: #64748b;
            line-height: 1.5;
            margin-bottom: 10px;
        }

        .recommendation-meta {
            font-size: 0.9rem;
            color: #94a3b8;
        }

        .loading {
            text-align: center;
            padding: 40px;
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }

        .loading h2 {
            margin-bottom: 20px;
            color: #1e293b;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: #f1f5f9;
            border-radius: 4px;
            overflow: hidden;
            margin: 20px 0;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #06b6d4, #67e8f9);
            border-radius: 4px;
            width: 0%;
            animation: loading 3s infinite;
        }

        @keyframes loading {
            0% { width: 0%; }
            50% { width: 70%; }
            100% { width: 100%; }
        }

        @media (max-width: 768px) {
            .breakdown-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }
            
            .score-display {
                flex-direction: column;
                gap: 20px;
            }
            
            .url-input {
                padding: 16px 120px 16px 16px;
            }
            
            .analyze-btn {
                padding: 12px 18px;
            }
        }

        @media (max-width: 480px) {
            .breakdown-grid {
                grid-template-columns: 1fr;
            }
            
            .logo-text {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">
                <div class="logo-icon">🦦</div>
                <div class="logo-text">SEOtter</div>
            </div>
            <div class="subtitle">Professional SEO Analysis with Actionable Insights</div>
        </div>

        <div class="input-section">
            <div class="url-container">
                <input type="text" class="url-input" id="urlInput" placeholder="Enter website URL (e.g., google.com)" autocomplete="off">
                <button class="analyze-btn" id="analyzeBtn" onclick="startAnalysis()">🦦 Analyze</button>
            </div>
        </div>

        <div class="results" id="results">
            <!-- Results will be inserted here -->
        </div>
    </div>

    <script>
        function startAnalysis() {
            console.log('🦦 Starting analysis...');
            
            const urlInput = document.getElementById('urlInput');
            const analyzeBtn = document.getElementById('analyzeBtn');
            const results = document.getElementById('results');
            
            const url = urlInput.value.trim();
            
            if (!url) {
                alert('Please enter a website URL! 🦦');
                urlInput.focus();
                return;
            }
            
            // Add protocol if missing
            let finalUrl = url;
            if (!url.startsWith('http://') && !url.startsWith('https://')) {
                finalUrl = 'https://' + url;
            }
            
            // Show loading
            analyzeBtn.disabled = true;
            analyzeBtn.textContent = '🔄 Analyzing...';
            
            showLoading(finalUrl);
            
            // Call API
            performAnalysis(finalUrl);
        }
        
        function showLoading(url) {
            const results = document.getElementById('results');
            results.innerHTML = `
                <div class="loading">
                    <h2>🦦 Analyzing ${url}...</h2>
                    <p>This may take 10-30 seconds for a comprehensive analysis</p>
                    <div class="progress-bar">
                        <div class="progress-fill"></div>
                    </div>
                    <p>Checking performance, SEO, content, and technical elements...</p>
                </div>
            `;
            results.style.display = 'block';
        }
        
        async function performAnalysis(url) {
            try {
                console.log('Calling API for:', url);
                
                const response = await fetch('/api/analyze', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ url: url })
                });
                
                console.log('API response status:', response.status);
                
                if (!response.ok) {
                    throw new Error(`Server error: ${response.status} ${response.statusText}`);
                }
                
                const result = await response.json();
                console.log('Analysis result:', result);
                
                displayResults(result, url);
                
            } catch (error) {
                console.error('Analysis failed:', error);
                showError(error.message, url);
            } finally {
                // Re-enable button
                const analyzeBtn = document.getElementById('analyzeBtn');
                analyzeBtn.disabled = false;
                analyzeBtn.textContent = '🦦 Analyze';
            }
        }
        
        function displayResults(result, url) {
            const results = document.getElementById('results');
            
            function getScoreColor(score) {
                if (score >= 80) return '#10b981';
                if (score >= 60) return '#f59e0b';
                return '#ef4444';
            }
            
            const domain = result.domain || new URL(url).hostname;
            const score = result.score || 0;
            const grade = result.grade || { grade: 'N/A', description: 'Analysis Complete' };
            
            results.innerHTML = `
                <!-- Score Hero -->
                <div class="score-hero">
                    <div class="score-display">
                        <div class="score-circle">
                            <div class="score-text">${score}</div>
                        </div>
                        <div>
                            <h2 style="margin-bottom: 10px;">Grade: ${grade.grade}</h2>
                            <p style="opacity: 0.9; font-size: 1.1rem;">${grade.description}</p>
                            <p style="opacity: 0.8; margin-top: 10px;">Analysis for ${domain}</p>
                        </div>
                    </div>
                </div>

                ${result.breakdown ? `
                <!-- Score Breakdown -->
                <div class="breakdown-grid">
                    <div class="breakdown-card">
                        <div class="breakdown-icon">⚡</div>
                        <div class="breakdown-title">Performance</div>
                        <div class="breakdown-score" style="color: ${getScoreColor(result.breakdown.performance)}">${result.breakdown.performance}</div>
                        <div class="breakdown-bar">
                            <div class="breakdown-fill" style="width: ${result.breakdown.performance}%; background: ${getScoreColor(result.breakdown.performance)}"></div>
                        </div>
                    </div>
                    
                    <div class="breakdown-card">
                        <div class="breakdown-icon">🔧</div>
                        <div class="breakdown-title">Technical SEO</div>
                        <div class="breakdown-score" style="color: ${getScoreColor(result.breakdown.technical)}">${result.breakdown.technical}</div>
                        <div class="breakdown-bar">
                            <div class="breakdown-fill" style="width: ${result.breakdown.technical}%; background: ${getScoreColor(result.breakdown.technical)}"></div>
                        </div>
                    </div>
                    
                    <div class="breakdown-card">
                        <div class="breakdown-icon">📝</div>
                        <div class="breakdown-title">Content</div>
                        <div class="breakdown-score" style="color: ${getScoreColor(result.breakdown.content)}">${result.breakdown.content}</div>
                        <div class="breakdown-bar">
                            <div class="breakdown-fill" style="width: ${result.breakdown.content}%; background: ${getScoreColor(result.breakdown.content)}"></div>
                        </div>
                    </div>
                    
                    <div class="breakdown-card">
                        <div class="breakdown-icon">📱</div>
                        <div class="breakdown-title">Social</div>
                        <div class="breakdown-score" style="color: ${getScoreColor(result.breakdown.social)}">${result.breakdown.social}</div>
                        <div class="breakdown-bar">
                            <div class="breakdown-fill" style="width: ${result.breakdown.social}%; background: ${getScoreColor(result.breakdown.social)}"></div>
                        </div>
                    </div>
                    
                    <div class="breakdown-card">
                        <div class="breakdown-icon">🔒</div>
                        <div class="breakdown-title">Security</div>
                        <div class="breakdown-score" style="color: ${getScoreColor(result.breakdown.security)}">${result.breakdown.security}</div>
                        <div class="breakdown-bar">
                            <div class="breakdown-fill" style="width: ${result.breakdown.security}%; background: ${getScoreColor(result.breakdown.security)}"></div>
                        </div>
                    </div>
                </div>
                ` : ''}

                ${result.recommendations && result.recommendations.length > 0 ? `
                <!-- Recommendations -->
                <div class="recommendations">
                    <h3 style="margin-bottom: 20px; font-size: 1.5rem;">🎯 Actionable Recommendations</h3>
                    ${result.recommendations.slice(0, 5).map(rec => `
                        <div class="recommendation-item">
                            <div class="recommendation-header">
                                <span class="recommendation-category">${rec.category}</span>
                                <span class="priority-${rec.priority.toLowerCase()}">${rec.priority} Priority</span>
                            </div>
                            <div class="recommendation-issue">${rec.issue}</div>
                            <div class="recommendation-solution">${rec.solution}</div>
                            <div class="recommendation-meta">
                                ⏱️ ${rec.timeToComplete} • 📈 ${rec.impact} Impact • ⚡ ${rec.difficulty} Difficulty
                            </div>
                        </div>
                    `).join('')}
                </div>
                ` : ''}

                <!-- Actions -->
                <div style="text-align: center; margin-top: 30px;">
                    <button onclick="analyzeAnother()" style="padding: 12px 24px; background: #06b6d4; color: white; border: none; border-radius: 12px; font-weight: 600; cursor: pointer; margin-right: 15px;">
                        🔄 Analyze Another Site
                    </button>
                    <button onclick="shareResults()" style="padding: 12px 24px; background: white; border: 2px solid #e2e8f0; border-radius: 12px; font-weight: 600; cursor: pointer;">
                        📤 Share Results
                    </button>
                </div>
            `;
        }
        
        function showError(error, url) {
            const results = document.getElementById('results');
            results.innerHTML = `
                <div style="text-align: center; padding: 40px; background: white; border: 2px solid #ef4444; border-radius: 16px;">
                    <div style="font-size: 3rem; margin-bottom: 20px;">😕</div>
                    <h2 style="color: #ef4444; margin-bottom: 15px;">Analysis Failed</h2>
                    <p style="color: #64748b; margin-bottom: 20px;">
                        We couldn't analyze <strong>${url}</strong>
                    </p>
                    <div style="background: #fef2f2; padding: 15px; border-radius: 8px; margin: 20px 0; font-family: monospace; color: #ef4444;">
                        ${error}
                    </div>
                    <button onclick="startAnalysis()" style="padding: 12px 24px; background: #06b6d4; color: white; border: none; border-radius: 12px; font-weight: 600; cursor: pointer; margin-right: 15px;">
                        🔄 Try Again
                    </button>
                    <button onclick="analyzeAnother()" style="padding: 12px 24px; background: white; border: 2px solid #e2e8f0; border-radius: 12px; font-weight: 600; cursor: pointer;">
                        ← Start Over
                    </button>
                </div>
            `;
        }
        
        function analyzeAnother() {
            document.getElementById('urlInput').value = '';
            document.getElementById('urlInput').focus();
            document.getElementById('results').style.display = 'none';
        }
        
        function shareResults() {
            const url = document.getElementById('urlInput').value;
            if (navigator.share) {
                navigator.share({
                    title: 'SEO Analysis Results',
                    text: `Check out the SEO analysis for ${url}`,
                    url: window.location.href
                });
            } else {
                navigator.clipboard.writeText(window.location.href).then(() => {
                    alert('Share link copied to clipboard! 🔗');
                });
            }
        }
        
        // Enhanced keyboard support
        document.addEventListener('DOMContentLoaded', function() {
            const urlInput = document.getElementById('urlInput');
            
            // Enter key to analyze
            urlInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    startAnalysis();
